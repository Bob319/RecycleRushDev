// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc319.subsystems;

import org.usfirst.frc319.RobotMap;
import org.usfirst.frc319.Robot;
import org.usfirst.frc319.commands.*;

import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class DriveTrain extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController leftTalon = RobotMap.driveTrainleftTalon;
    SpeedController rightTalon = RobotMap.driveTrainrightTalon;
    RobotDrive robotDrive = RobotMap.driveTrainRobotDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new DriveTrainArcadeDrive());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    public void arcadeDrive(){
    	double moveValue = Robot.oi.xboxController.getRawAxis(1);
    	double rotateValue = Robot.oi.xboxController.getRawAxis(4);
    	double scaledMoveValue = 0;
    	double scaledRotateValue = 0;
    	
    	if (moveValue < 0) {
    		scaledMoveValue = -(moveValue * moveValue);    		
    	} else {
    		scaledMoveValue = (moveValue * moveValue);
    	}
    	if (rotateValue < 0) {
    		scaledRotateValue = -(rotateValue * rotateValue);
    	} else {
    		scaledRotateValue = (rotateValue * rotateValue);
    	}
    	robotDrive.arcadeDrive(-scaledMoveValue* 0.7, scaledRotateValue);
    	 //Notice the minus in ^ front of the scaledMoveValue
    }
}

