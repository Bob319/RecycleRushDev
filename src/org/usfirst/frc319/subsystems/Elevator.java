// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc319.subsystems;

import org.usfirst.frc319.RobotMap;
import org.usfirst.frc319.commands.*;

import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.CANTalon.ControlMode;
import edu.wpi.first.wpilibj.CANTalon.FeedbackDevice;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class Elevator extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	CANTalon elevatorMotorLead = new RobotMap().elevatorMotorLead;
	CANTalon elevatorMotorFollow = new RobotMap().elevatorMotorFollow;
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
	public Elevator(){
		elevatorMotorLead.changeControlMode(ControlMode.Position);
		elevatorMotorLead.setFeedbackDevice(FeedbackDevice.QuadEncoder);
		elevatorMotorLead.setPID(1, 0, 0);
		elevatorMotorLead.reverseSensor(true);
		
		elevatorMotorFollow.changeControlMode(CANTalon.ControlMode.Follower);
		elevatorMotorFollow.set(elevatorMotorLead.getDeviceID());
	}
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new ElevatorDisplay());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    	
    	
    	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    public void getEncoder(){
    	
    	System.out.println("Elevator Position = "+ elevatorMotorLead.getEncPosition());
    	//System.out.println("Is Top switch closed? = "+elevatorMotorLead.isFwdLimitSwitchClosed());
    	//System.out.println("Is Bottom switch closed? = " + elevatorMotorLead.isRevLimitSwitchClosed());
    	
    }
    
}

